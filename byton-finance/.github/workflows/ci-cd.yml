name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Job 1: Code Quality & Testing
  test:
    name: Test & Quality Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run ESLint
        run: npm run lint

      - name: Type check
        run: npx tsc --noEmit

      # Add tests when available
      # - name: Run tests
      #   run: npm test
      #   env:
      #     CI: true

  # Job 2: Build Application
  build:
    name: Build Application
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            .next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: nextjs-build
          path: |
            .next/
            public/
          retention-days: 1

  # Job 3: Security Scanning
  security:
    name: Security Scan
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run npm audit
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v2
        with:
          languages: 'javascript'

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # Job 4: Deploy to Vercel (Production)
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: production
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: nextjs-build

      - name: Deploy to Vercel Production
        id: deploy
        run: |
          vercel --prod --yes --token=${{ secrets.VERCEL_TOKEN }}
          echo "url=$(vercel --prod --token=${{ secrets.VERCEL_TOKEN }} 2>&1 | grep -o 'https://[^[:space:]]*')" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  # Job 5: Deploy to Vercel (Staging)
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build, security]
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    environment:
      name: staging
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: nextjs-build

      - name: Deploy to Vercel Staging
        id: deploy
        run: |
          vercel --yes --token=${{ secrets.VERCEL_TOKEN }}
          echo "url=$(vercel --token=${{ secrets.VERCEL_TOKEN }} 2>&1 | grep -o 'https://[^[:space:]]*')" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

  # Job 6: Notify on Success/Failure (optional)
  notify:
    name: Notification
    runs-on: ubuntu-latest
    needs: [deploy-production, deploy-staging]
    if: always()

    steps:
      - name: Notify Success
        if: needs.deploy-production.result == 'success' || needs.deploy-staging.result == 'success'
        run: echo "✅ Deployment successful!"

      - name: Notify Failure
        if: needs.deploy-production.result == 'failure' || needs.deploy-staging.result == 'failure'
        run: echo "❌ Deployment failed!"