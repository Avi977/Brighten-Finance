name: Preview Deployment

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

env:
  NODE_VERSION: '18'
  NEXT_TELEMETRY_DISABLED: 1

jobs:
  # Quick validation for PRs
  validate:
    name: Quick Validation
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install dependencies
        run: npm ci --prefer-offline --no-audit

      - name: Run ESLint
        run: npm run lint

      - name: Type check
        run: npx tsc --noEmit

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

  # Deploy preview to Vercel
  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: validate
    environment:
      name: preview
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: './package-lock.json'

      - name: Install Vercel CLI
        run: npm install -g vercel@latest

      - name: Deploy to Vercel Preview
        id: deploy
        run: |
          vercel --yes --token=${{ secrets.VERCEL_TOKEN }}
          echo "url=$(vercel --token=${{ secrets.VERCEL_TOKEN }} 2>&1 | grep -o 'https://[^[:space:]]*')" >> $GITHUB_OUTPUT
        env:
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}

      - name: Comment PR with preview URL
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        with:
          script: |
            const url = '${{ steps.deploy.outputs.url }}';
            const comment = `🚀 **Preview deployment ready!**

            📝 **Changes:** ${{ github.event.pull_request.title }}
            🔗 **Preview URL:** ${url}
            📊 **Commit:** \`${{ github.sha }}\`

            This preview will be updated automatically when you push new changes to this PR.`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });