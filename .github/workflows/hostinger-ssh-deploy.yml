name: Deploy to Hostinger via SSH

on:
  push:
    branches: [main]
    paths-ignore:
      - '*.md'
      - 'docs/**'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  build-and-deploy:
    name: Build and Deploy to Hostinger
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build

      - name: Prepare deployment files
        run: |
          # Create a clean deployment directory
          mkdir -p deploy

          # Copy all built files
          cp -r out/* deploy/

          # Copy essential server files
          cp public/.htaccess deploy/
          cp public/robots.txt deploy/
          cp public/sitemap.xml deploy/

          # Create PHP index for better hosting compatibility
          cat > deploy/index.php << 'EOF'
          <?php
          // Redirect to index.html for static hosting
          if (file_exists('index.html')) {
              include 'index.html';
          } else {
              echo 'Site is being deployed...';
          }
          ?>
          EOF

          # Create deployment info
          echo "Deployed: $(date)" > deploy/deploy-info.txt
          echo "Commit: ${{ github.sha }}" >> deploy/deploy-info.txt

      - name: Deploy to Hostinger via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_PRIVATE_KEY }}
          port: ${{ secrets.HOSTINGER_PORT || 22 }}
          script: |
            # Navigate to web directory
            cd public_html

            # Create backup of current site
            if [ -d "backup-$(date +%Y%m%d)" ]; then
              rm -rf backup-$(date +%Y%m%d)
            fi

            # Backup current files (keep last 3 backups)
            mkdir -p backup-$(date +%Y%m%d)
            cp -r * backup-$(date +%Y%m%d)/ 2>/dev/null || true

            # Clean up old backups (keep only last 3)
            ls -1dt backup-* | tail -n +4 | xargs rm -rf

            # Clear current directory (except backups)
            find . -maxdepth 1 ! -name 'backup-*' ! -name '.' ! -name '..' -exec rm -rf {} + 2>/dev/null || true

      - name: Upload files to Hostinger
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_PRIVATE_KEY }}
          port: ${{ secrets.HOSTINGER_PORT || 22 }}
          source: "deploy/*"
          target: "/home/${{ secrets.HOSTINGER_USERNAME }}/public_html"
          strip_components: 1
          overwrite: true

      - name: Set correct permissions
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.HOSTINGER_HOST }}
          username: ${{ secrets.HOSTINGER_USERNAME }}
          key: ${{ secrets.HOSTINGER_SSH_PRIVATE_KEY }}
          port: ${{ secrets.HOSTINGER_PORT || 22 }}
          script: |
            cd public_html

            # Set correct permissions
            find . -type f -exec chmod 644 {} \;
            find . -type d -exec chmod 755 {} \;
            chmod 644 .htaccess 2>/dev/null || true

            # Verify deployment
            echo "✅ Deployment completed successfully!"
            echo "📅 Deployed at: $(date)"
            echo "📁 Files in public_html:"
            ls -la | head -10

            # Check if index.html exists
            if [ -f "index.html" ]; then
              echo "✅ index.html found - website should be live!"
            else
              echo "❌ index.html not found - check deployment"
            fi